---
title: "Preoperative Atelectasis"
subtitle: "Part 5: Statistical Modelling of Atelectasis"
author: "Javier Mancilla Galindo"
date: "`r Sys.Date()`"
project: 
    output-dir: ../docs/reports
execute: 
  echo: false
  warning: false
toc: true
toc_float: true
format:
  html:
    embed-resources: true
  pdf:
    documentclass: scrartcl
editor: visual
---

# Setup

#### Packages used

```{r}
#| echo: true
if (!require("pacman", quietly = TRUE)) {
  install.packages("pacman")
}


pacman::p_load(
  tidyverse, # Used for basic data handling and visualization.
  RColorBrewer, #Color palettes for data visualization. 
  table1, #Used to add lables to variables.
  dagitty, #Used in conjunction with https://www.dagitty.net/ to create 
          #directed acyclic graph to inform statistical modelling.  
  lavaan, #Used to create correlation matrix to assess conditional independencies.  
  broom, #Used to exponentiate coefficients of regression models.  
  sandwich, #Used to calculate robust standard errors for prevalence ratios.
  flextable, #Used to export tables.  
  rms, #Used to model ordinal outcome (atelectasis percent) and 
       #test proportional odds assumptions.  
  VGAM, #Used to model partial proportional odds model.   
  gt #Used to present a summary of the results of regression models.   
)
```

##### Session and package dependencies

```{r}
# Credits chunk of code: Alex Bossers, Utrecht University (a.bossers@uu.nl)

# remove clutter
session <- sessionInfo()
session$BLAS <- NULL
session$LAPACK <- NULL
session$loadedOnly <- NULL
# write log file
writeLines(
  capture.output(print(session, locale = FALSE)),
  paste0("sessions/",lubridate::today(), "_session_Part_5.txt")
)

session

rm(session)

```

```{r}
#| include: false

# Create directories for sub-folders 
figfolder <- "../results/output_figures"
tabfolder <- "../results/output_tables"
dir.create(figfolder, showWarnings = FALSE)
dir.create(tabfolder, showWarnings = FALSE)
```

```{r}
#| include: false

# Load dataset  
data <- read.csv("../data/processed/atelectasis_included.csv",
                 na.strings="NA", 
                 row.names = NULL)
# Recode variables 
source("scripts/variable_names.R")

# Recreate variables created in: 
## Part 2 (altitude category) and ## Part 4 (collapsed atelectasis percent): 
data <- data %>% 
  mutate(
    altitude_cat = cut(altitude,
                       breaks=c(0,1000,2500),
                       right=FALSE,
                       labels=c("Low altitude","Moderate altitude")
                       )
    )

data$atelectasis_percent <- factor(
  data$atelectasis_percent, 
  levels=c(0,2.5,5,7.5,10,12.5,15,17.5,27.5)
  ) %>% 
  fct_collapse("17.5%" = c(17.5,27.5)) %>% 
  factor(labels = c("0%","2.5%","5%","7.5%","10%","12.5%","15%","17.5%"))
```

## DAG

DAG generated in the [DAGitty website](https://www.dagitty.net/) and sourced from the accompanying script ***DAG.R***

```{r}
source("scripts/DAG.R")
plot(DAG)
```

## Testing of conditional independencies in DAG:

This procedure was performed as suggested in [this article](https://doi.org/10.1002/cpz1.45).

Implied conditional independencies:

```{r}
impliedConditionalIndependencies(DAG)
```

```{r}
#| include: false 
## Change 'false' for 'true' above to show results 

subsetcondit <- data %>% select(c("age",
                                       "sex",
                                       "type_obesity",
                                       "spo2_VPO",
                                       "hb",
                                       "sleep_apnea",
                                       "atelectasis_percent",
                                       "altitude_cat")
                                     ) 

subsetcondit <- subsetcondit %>% 
  mutate(sex = as.numeric(sex),
         sleep_apnea = as.numeric(sleep_apnea)
         )

corr <- lavCor(subsetcondit,
               ordered=c("sex",
                         "type_obesity",
                         "sleep_apnea",
                         "atelectasis_percent",
                         "altitude_cat",
                         "spo2_VPO")
               )

corr
```

```{r}
#| include: false 
## Change 'false' for 'true' above to show results 

localtests <- localTests(DAG, sample.cov=corr, sample.nobs=nrow( subsetcondit ) )
localtests
```

Local tests results plot:

```{r}
plotLocalTestResults(localtests)
```

Conditional independence assumption OK as all confidence intervals cointain 0.

The minimal set of adjustment for models is ***age***, ***sex***, and ***sleep_apnea***.

```{r}
#| include: false 
rm(DAG,corr,localtests,subsetcondit)
```

# Prevalence Ratio

This [paper](https://doi.org/10.1016/j.annepidem.2023.08.001) and accompanying code were used to calculate prevalence ratios.

A modified Poisson regression model with robust errors will be applied to obtain prevalence ratios.

Prevalence ratios were calculated with the accompanying sourced script ***Prevalence_Ratio.R***

## Table 2

```{r}
source("scripts/Prevalence_Ratio.R")
table2 %>% gt()
```

```{r}
#| include: false 
rm(dataprev, poisson_fit, covmat, se, model_output, model_output2,
   table_output, table_output2, table2)
```

# Ordinal Logistic Regression Model

This modelling strategy was performed according to:\
- [Harrel, Frank. March, 2022. "Assessing the Proportional Odds Assumption and its Impact". Statistical Thinking. March 9, 2022.](https://www.fharrell.com/post/impactpo/index.html#overall-efficacy-assessment)

```{r}
# Rename type obesity levels to facilitate reading of results.
# Atelectasis percent needs to be ordered for modelling.  
data <- data %>% 
  mutate(
    type_obesity = fct_recode(
      type_obesity,
      "1"="Class 1 Obesity",
      "2"="Class 2 Obesity",
      "3"="Class 3 Obesity"
      ), 
    atelectasis_percent = ordered(atelectasis_percent)
    ) 
```

```{r}
# Visualize pattern of atelectasis percent increase by obesity type category.  
data %>% 
  ggplot(aes(x = type_obesity, fill = atelectasis_percent)) + 
  geom_bar() +  
  scale_fill_manual(values = brewer.pal(8,"Blues")) + 
  labs(
    x = "Obesity class",
    y = "Count",
    title = "Atelectasis percent increase by obesity class category"
  ) +
  theme_minimal()
```

## Check proportional odds assumption for main variable of interest:

```{r}
options(
  datadist=NULL,
  prType='html'
  )

dd <- datadist(data); options(datadist='dd')
```

```{r}
fit_BMI <- orm(atelectasis_percent ~ type_obesity,
    data = data
    )

fit_BMI
```

Odds ratio for type obesity in an univariable model:

```{r}
summary(fit_BMI, type_obesity="1")
```

Proportional odds assumption:

```{r}
anova(fit_BMI)
```

This shows that the proportional odds assumption is not met since p\<0.05 in the ANOVA test.

There are a couple of alternatives for modelling. One would be to fit a full multinomial model, although this would be expected to be unoptimal due to loss of statistical power, less parsimonious, and difficult interpretation compared to ordinal. A second approach would be to fir a partial proportional odds model allowing nominal effects for obesity class categories.

However, it is known that violations of the proportional odds assumption may not be as serious in some cases, as explained in the reference provided before. Thus, I will test how these 2 alternative modelling strategies would compare against a proportional odds model.

As a note, it is known that having few observations per category does not affect the results of ordinal regression, and that some categories may need to be combined to assess proportional odds assumption. [REF](https://stats.stackexchange.com/q/48844)

Thus, I will create atelectasis percent categories by collapsing non-integer atelectasis percentage categories (i.e., 2.5%, 7.5%) against the immediate lower category, resulting in 5% jumps (0-5%, 5-10%, 10-15%, and â‰¥15%) which meet the assumption of being equi-distant categories for ordinal regression:

```{r}
data_prop <- data 
data_prop$atelectasis_percent <- fct_collapse(data_prop$atelectasis_percent,
                                              "0%" = c("0%","2.5%"),
                                              "5%" = c("5%","7.5%"),
                                              "10%" = c("10%","12.5%"),
                                              "15%" = c("15%","17.5%")
                                              )

table(data_prop$atelectasis_percent)
```

Are subgroups better represented now?

```{r}
table(data_prop$atelectasis_percent, 
      data_prop$type_obesity)
```

Some improvement.

Will now test the impact of not meeting the proportional odds assumption in a model adjusted for covariates:

```{r}
#| include: false
impact_PO <- impactPO(
  atelectasis_percent ~ type_obesity + sleep_apnea + age + sex, 
  nonpo = ~ type_obesity,
  data = data,
  newdata = data_prop
  )
```

Comparison of proportional odds (PO), partial proportional odds (PPO), and multinomial model:

```{r}
# rms::print.impactPO had a bug, so I had to get my way around with 
# this code to print results nicely:   

data.frame(t(impact_PO$stats)) %>% 
  `colnames<-`(NULL)  %>%
  `colnames<-`(.[1, ]) %>% 
  rownames_to_column() %>% 
  dplyr::slice(-1) %>% 
  mutate(PO = replace_na(PO," ")) %>% 
  gt()
```

Lowest AIC is for the proportional odds (PO) model. Likewise, the McFadden adjusted R2 is the highest for the PO model. Thus, I will present the PO model despite proportional odds assumption not met as this is not causing serious problems and seems to be the best model according to the results shown and discussed.

## Univariate models for covariates:

```{r}
fit_OSA <- orm(atelectasis_percent ~ sleep_apnea,
    data = data
    )

fit_OSA
```

```{r}
summary(fit_OSA)
```

```{r}
fit_sex <- orm(atelectasis_percent ~ sex,
    data = data
    )

fit_sex
```

```{r}
summary(fit_sex, sex = "Man")
```

```{r}
fit_age <- orm(atelectasis_percent ~ age,
    data = data
    )

fit_age
```

```{r}
summary(fit_age)
```

## Multivariable model

```{r}
fit_multi <- orm(atelectasis_percent ~ type_obesity +
                   sleep_apnea + sex + age,
                 data = data,
                 )

fit_multi
```

```{r}
summary(fit_multi, type_obesity = "1", sex = "Man")
```

```{r}
#| include: false

# Run this chunk if you wish to clear your environment and unload packages.

pacman::p_unload(negate = TRUE)

rm(list=setdiff(ls(pattern = "^fit"), lsf.str()))
rm(data, data_prop, dd, impact_PO, figfolder, tabfolder)
```
